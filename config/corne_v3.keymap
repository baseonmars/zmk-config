/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        lt_spc: layer_tap_space {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_SPACE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        lt_ret: layer_tap_return {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_RETURN";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        esc_noop: escape_noop {
            compatible = "zmk,behavior-hold-tap";
            label = "ESCAPE_NOOP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            label = "HYPER";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>,
                       <&macro_pause_for_release>,
                       <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
          &kp TAB       &kp Q       &kp W       &kp E        &kp R      &kp T      &kp Y        &kp U        &kp I       &kp O       &kp P   &kp BSPC
  &esc_noop N0 ESCAPE  &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm LSHFT F      &kp G      &kp H  &hm RSHFT J  &hm RGUI K  &hm RALT L  &hm RCTRL SEMI    &kp SQT
         &kp LCTRL       &kp Z       &kp X       &kp C        &kp V      &kp B      &kp N        &kp M    &kp COMMA     &kp DOT    &kp FSLH     &hyper
                                              &kp LGUI   &kp LSHFT  &lt_spc 1 SPACE    &lt_ret 2 RET   &kp RSHFT     &kp RALT
            >;

            display-name = "ALPHA";
        };

        layer_lower {
            bindings = <
&kp ESC  &kp N1        &kp N2    &kp N3  &kp N4     &kp N5            &kp N6    &kp N7          &kp N8           &kp N9  &kp N0  &kp BACKSPACE
 &trans  &kp N4        &kp N5    &kp N6  &kp N0      &none          &kp LEFT  &kp DOWN          &kp UP        &kp RIGHT  &trans        &kp DEL
 &trans  &kp N7  &kp NUMBER_8    &kp N9  &kp N0      &none    &kp UNDERSCORE  &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans         &trans
                               &kp LGUI  &trans     &trans            &trans  &trans        &kp RALT
            >;

            display-name = "NUM";
        };

        layer_raise {
            bindings = <
&kp ESC  &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS   &kp KP_MULTIPLY  &kp LPAR &kp RPAR  &kp BACKSPACE
 &trans    &trans  &kp LPAR &kp RPAR  &kp LBKT  &kp RBKT     &kp MINUS   &kp EQUAL  &trans           &trans   &kp BSLH  &kp GRAVE
 &trans    &trans  &trans   &trans    &kp LBRC  &kp RBRC     &kp UNDER   &kp PLUS   &trans           &trans   &kp PIPE  &kp TILDE
                           &kp LGUI     &mo 3     &trans         &trans     &trans           &trans
            >;

            display-name = "SYMBOL";
        };

        layer_upper {
            bindings = <
&kp ESCAPE  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp BACKSPACE
    &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans         &trans
    &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans         &trans
                            &trans  &trans  &trans    &trans   &mo 4  &trans
            >;

            display-name = "FUNC";
        };

        bluetooth {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &out OUT_USB  &trans  &trans  &trans  &trans
    &trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
    &trans  &trans        &trans        &trans        &trans        &out OUT_BLE    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans         &mo 5        &trans    &trans  &trans  &trans
            >;

            display-name = "BT";
        };

        RGB {
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans             &trans           &trans           &trans           &trans           &trans  &trans
&trans  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI    &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &trans
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD    &rgb_ug RGB_SPD  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_TOG  &trans
                                                   &trans           &trans           &trans             &trans            &mo 5           &trans
            >;

            display-name = "RGB";
        };
    };
};
